{"version":3,"sources":["contexts/carrinho.tsx","helpers.ts","components/Titulo.tsx","components/Form.tsx","components/Carrinho.tsx","styles/theme.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["CarrinhoContext","createContext","CarrinhoProvider","children","useState","items","setItems","total","setTotal","useEffect","storagedItems","localStorage","getItem","JSON","parse","setItem","stringify","reduce","acc","item","Provider","value","useCarrinho","useContext","formataEmReais","valor","Intl","NumberFormat","style","currency","format","C","as","produto","setProduto","preco","setPreco","precoF","setPrecoF","quantidade","setQuantidade","totalItem","setTotalItem","handleFocus","e","preventDefault","target","select","bg","width","borderRadius","maxWidth","minWidth","p","flexDir","placeholder","type","focusBorderColor","size","onChange","min","s","v","parseFloat","handleChangePreco","onFocus","defaultValue","parseInt","handleChangeQuantidade","onClick","nextId","length","id","nome","handleAddItem","colorScheme","sz","leftIcon","w","h","MdAddShoppingCart","map","i","detail","restantes","filter","handleDeletaItem","theme","extendTheme","colors","amarelo","azul","ciano","laranja","rosa","styles","global","body","color","App","align","direction","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8cac29ff.chunk.js","sourcesContent":["import { createContext, useState, useEffect, useContext, ReactNode } from 'react';\n\nexport interface Item {\n  id: number\n  nome: string\n  preco: number\n  quantidade: number\n  total: number\n}\n\ninterface CarrinhoContextData {\n  total: number\n  items: Item[]\n  setItems: (p: Item[]) => void\n}\n\nconst CarrinhoContext = createContext<CarrinhoContextData>({} as CarrinhoContextData);\n\nexport function CarrinhoProvider({ children }: { children: ReactNode }) {\n  const [ items, setItems ] = useState<Item[]>([])\n  const [ total, setTotal ] = useState(0)\n\n  useEffect(() => {\n    const storagedItems = localStorage.getItem('rancho:items');\n\n    if (storagedItems) {\n      setItems(JSON.parse(storagedItems));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('rancho:items', JSON.stringify(items))\n\n    const total = items\n      .reduce((acc, item) => acc + item.total, 0)\n\n    setTotal(total)\n  }, [items]);\n\n  return (\n    <CarrinhoContext.Provider value={{\n      total,\n      items,\n      setItems,\n      }}>\n      {children}\n    </CarrinhoContext.Provider>\n  );\n};\n\nexport function useCarrinho() {\n  const context = useContext(CarrinhoContext);\n\n  return context;\n}\n","export function formataEmReais(valor: number) {\n  return new Intl.NumberFormat('pt', { style: 'currency', currency: 'BRL'}).format(valor)\n}\n","import { useCarrinho } from 'contexts/carrinho'\n\nimport { Heading } from '@chakra-ui/react'\nimport { formataEmReais } from 'helpers'\n\nexport default function C() {\n  const { total } = useCarrinho();\n  return (\n    <Heading as='h1'>\n      {formataEmReais(total)}\n    </Heading>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport { useCarrinho } from 'contexts/carrinho'\nimport { formataEmReais } from 'helpers'\n\nimport {\n  Flex,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Button,\n  Stack,\n  HStack,\n  Icon\n} from \"@chakra-ui/react\"\nimport { MdAddShoppingCart } from 'react-icons/md';\n\n\nexport default function C() {\n  const { items, setItems } = useCarrinho();\n  const [ produto, setProduto ] = useState(\"\");\n  const [ preco, setPreco ] = useState(0);\n  const [ precoF, setPrecoF ] = useState(\"0\");\n  const [ quantidade, setQuantidade ] = useState(1);\n  const [ totalItem, setTotalItem ] = useState(0);\n\n  useEffect(() => {\n    setTotalItem(preco*quantidade);\n  }, [preco, quantidade])\n\n  function handleChangeProduto(e: React.ChangeEvent<HTMLInputElement>) {\n    setProduto(e.target.value);\n  }\n\n  function handleChangePreco(value: string) {\n    setPrecoF(value);\n    const v = !value ? 0 : parseFloat(value);\n    setPreco(v);\n  }\n\n  function handleChangeQuantidade(value: string) {\n    const v = !value ? 0 : parseInt(value);\n    setQuantidade(v);\n  }\n\n  function handleFocus(e: React.FocusEvent<HTMLInputElement>) {\n    e.preventDefault();\n    e.target.select();\n  }\n\n  function handleAddItem() {\n    const nextId = !items.length ? 1 : items[items.length - 1].id + 1;\n    setItems([\n      ...items,\n      {\n        id: nextId,\n        nome: produto,\n        preco,\n        quantidade,\n        total: totalItem\n      }\n    ]);\n\n    setProduto(\"\");\n    setPreco(0);\n    setPrecoF(\"0\");\n    setQuantidade(1);\n  }\n\n  return (\n    <Flex\n      as=\"form\"\n      bg=\"blue.200\"\n      width=\"100%\"\n      borderRadius={8}\n      maxWidth={600}\n      minWidth={300}\n      p=\"4\"\n      flexDir=\"column\"\n    >\n      <Stack>\n        <Input\n          placeholder=\"Produto\"\n          type=\"text\"\n          bg=\"blue.50\"\n          focusBorderColor=\"laranja\"\n          size=\"lg\"\n          value={produto}\n          onChange={handleChangeProduto}\n        />\n\n        <HStack>\n          <InputGroup size=\"lg\">\n            <InputLeftAddon bg=\"blue.100\">R$</InputLeftAddon>\n            <NumberInput\n              min={0}\n              bg=\"blue.50\"\n              borderRadius={4}\n              focusBorderColor=\"laranja\"\n              value={precoF}\n              onChange={s => handleChangePreco(s)}\n              onFocus={handleFocus}\n            >\n              <NumberInputField placeholder=\"PreÃ§o\" />\n            </NumberInput>\n          </InputGroup>\n\n          <NumberInput\n            defaultValue={1}\n            value={quantidade}\n            onChange={s => handleChangeQuantidade(s)}\n            onFocus={handleFocus}\n            min={1}\n            bg=\"blue.50\"\n            borderRadius={4}\n            focusBorderColor=\"laranja\"\n            size=\"lg\"\n          >\n            <NumberInputField placeholder=\"Quantidade\" />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n        </HStack>\n\n        <Button\n          onClick={() => handleAddItem()}\n          colorScheme=\"green\"\n          sz=\"lg\"\n          leftIcon={<Icon w={6} h={6} as={MdAddShoppingCart} />}\n        >\n          {formataEmReais(totalItem)}\n        </Button>\n      </Stack>\n    </Flex>\n  )\n}\n","import { useCarrinho } from 'contexts/carrinho'\n\nimport { formataEmReais } from 'helpers'\n\nexport default function C() {\n  const { items, setItems } = useCarrinho();\n\n  function handleDeletaItem(\n    e: React.MouseEvent<HTMLLIElement>, id: number\n  ) {\n    if(e.detail === 3) {\n      const restantes = items.filter(i => i.id !== id);\n      setItems(restantes);\n    }\n  }\n\n  return (\n    <ol>\n      {items.map(i => (\n        <li key={i.id} onClick={(e) => handleDeletaItem(e, i.id)}>\n          {i.nome} {i.quantidade}x{formataEmReais(i.preco)} = <strong>{formataEmReais(i.total)}</strong>\n        </li>\n      ))}\n    </ol>\n  )\n\n}\n","import { extendTheme } from '@chakra-ui/react'\n\nexport const theme = extendTheme({\n  // https://coolors.co/eac435-345995-03cea4-fb4d3d-ca1551\n  colors: {\n    amarelo: '#EAC435',\n    azul: '#345995',\n    ciano: '#03CEA4',\n    laranja: '#FB4D3D',\n    rosa: '#CA1551',\n  },\n  styles: {\n    global: {\n      body: {\n        bg: \"#fff\",\n        color: \"gray.900\"\n      }\n    }\n  }\n})\n","import { ChakraProvider, Flex } from \"@chakra-ui/react\"\n\nimport { CarrinhoProvider } from 'contexts/carrinho'\nimport Titulo from \"components/Titulo\"\nimport Form from \"components/Form\"\nimport Carrinho from \"components/Carrinho\"\nimport { theme } from 'styles/theme'\n\nexport function App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <CarrinhoProvider>\n        <Flex w=\"100vw\" h=\"100vh\" align=\"center\" direction=\"column\" p={2}>\n          <Titulo />\n\n          <Form />\n\n          <Flex width=\"100%\" p={6}>\n            <Carrinho />\n          </Flex>\n        </Flex>\n      </CarrinhoProvider>\n    </ChakraProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}